{"version":3,"sources":["Components/Calculator/Calculator.js","Components/Temperature/TemperatureInput.js","Components/Temperature/CalculateTemperature.js","App.js","reportWebVitals.js","index.js"],"names":["Calculator","props","_this","Object","_home_prakash_Documents_personalProjects_react_projects_react_calculator_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","state","calc","result","render","_this2","ops","updateCalc","value","includes","slice","setState","eval","toString","calculate","deleteValue","val","reset","createDigits","digits","_loop","i","push","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","key","onClick","className","Component","scaleName","c","f","TemperatureInput","_this$props","temperature","temperatureType","handleTemperature","react_default","htmlFor","type","id","aria-describedby","placeholder","onChange","e","min","WaterBoilingPoint","celsus","CalculateTemperature","classCallCheck","temperatureShortHandEnum","Celsus","Fahrenheit","toCelsius","fahrenheit","getProperTemperature","toFahrenheit","celsius","event","_this$setState","nextTemperature","nextTemperateureType","target","defineProperty","parsedTemperature","parseFloat","Number","isNaN","Math","round","Temperature_TemperatureInput","App","getCurrentSelectedComponent","currentSelection","Temperature_CalculateTemperature","handleCurrentSelection","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.74f53920.chunk.js","sourcesContent":["import React, { Component }  from 'react';\nimport './calculator.css'\n\nclass Calculator extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            calc: '',\n            result: ''\n        }\n\n    }\n\n\n    render() {\n        const ops = ['/', '*', '-', '+', '.']\n\n        const updateCalc = (value) => {\n            if (\n                (ops.includes(value) && this.state.calc === '') ||\n                (ops.includes(value) && ops.includes(this.state.calc.slice(-1)))\n            ) {\n                return;\n            }\n\n            this.setState({\n                calc: this.state.calc + value\n            })\n            if (!ops.includes(value)) {\n                this.setState({\n                    result: eval(this.state.calc + value).toString()\n                })\n            }\n        }\n\n        const calculate = () => {\n            if (!ops.includes(this.state.calc.slice(-1))) {\n                if (this.state.calc) {\n                    this.setState({\n                        calc: eval(this.state.calc).toString()\n                    })\n                }\n            }\n        }\n\n        const deleteValue = () => {\n            if (this.state.calc !== '') {\n                const val = this.state.calc.slice(0, -1);\n                let result = ''\n                if (ops.includes(val.slice(-1))) {\n                    result = eval(val.slice(0, -1))\n                } else {\n                    result = eval(val)\n                }\n                this.setState({\n                    calc: val,\n                    result: result\n                })\n            }\n        }\n\n        const reset = () => {\n            this.setState({\n                calc: '',\n                result: ''\n            })\n        }\n\n        const createDigits = () => {\n            const digits = [];\n            for (let i = 1; i < 10; i++) {\n                digits.push(\n                    <button key={i}\n                        onClick={() => updateCalc(i.toString())}>\n                        {i}\n                    </button>\n                )\n            }\n            return digits\n        }\n\n\n        return <div className=\"calculator-page mt-5 d-flex justify-content-center\">\n            <div className=\"calculator\">\n                <div className=\"output\">\n                    {this.state.result ?\n                        <span>({this.state.result})</span> : ''} {this.state.calc || 0}\n                </div>\n                <div className=\"operators\">\n                    <button onClick={reset}>AC</button>\n                    <button onClick={() => updateCalc('/')}>/</button>\n                    <button onClick={() => updateCalc('*')}>*</button>\n                    <button onClick={() => updateCalc('+')}>+</button>\n                    <button onClick={() => updateCalc('-')}>-</button>\n                    <button onClick={deleteValue}>DEL</button>\n                </div>\n\n                <div className=\"digits\">\n                    {createDigits()}\n                    <button onClick={() => updateCalc('0')}>0</button>\n                    <button onClick={() => updateCalc('.')}>.</button>\n                    <button onClick={calculate}>=</button>\n                </div>\n            </div>\n        </div>\n    }\n}\n\n\nexport default Calculator","import React, { Component }  from 'react';\nimport \"../../App.css\";\nconst scaleName = {\n    c: 'Celsius',\n    f: 'Fahrenheit'\n}\nclass TemperatureInput extends Component {\n    render() {\n        const { temperature, temperatureType, handleTemperature } = this.props\n        return <div className=\"form-group m-2\">\n            <label htmlFor=\"inputValue\">\n                <h6>\n                    Input Value for {temperatureType ? scaleName[temperatureType] : scaleName['c']}\n                </h6>\n            </label>\n            <input type=\"number\" className=\"form-control transbg\" id=\"inputValue\" aria-describedby=\"tempratureHelp\" placeholder=\"Enter value\" value={temperature} onChange={(e) => handleTemperature(temperatureType, e)} min={0} />\n            <small id=\"tempratureHelp\" className=\"form-text text-muted\">Enter {scaleName[temperatureType]} value to change it.</small>\n        </div>\n    }\n\n}\n\nexport default TemperatureInput","import React, { Component }  from 'react';\nimport TemperatureInput from \"./TemperatureInput\";\n\nclass CalculateTemperature extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            c: 0,\n            f: 32,\n        }\n    }\n    temperatureShortHandEnum = {\n        Celsus: 'c',\n        Fahrenheit: 'f'\n    }\n\n    toCelsius = (fahrenheit) => {\n        fahrenheit = this.getProperTemperature((fahrenheit - 32) * 5 / 9)\n        return fahrenheit;\n    }\n\n    toFahrenheit = (celsius) => {\n        celsius = this.getProperTemperature((celsius * 9 / 5) + 32)\n        return celsius;\n    }\n\n    getProperTemperature(temperature) {\n        const parsedTemperature = parseFloat(temperature);\n        if (Number.isNaN(parsedTemperature)) {\n            return '';\n        }\n        const rounded = Math.round(parsedTemperature * 1000) / 1000;\n        return rounded.toString();\n    }\n\n    handleTemperature = (type, event) => {\n        let nextTemperature = 0\n        let nextTemperateureType = ''\n        if (type === this.temperatureShortHandEnum.Celsus) {\n            nextTemperature = this.toFahrenheit(event.target.value)\n            nextTemperateureType = this.temperatureShortHandEnum.Fahrenheit\n        } else {\n            nextTemperature = this.toCelsius(event.target.value)\n            nextTemperateureType = this.temperatureShortHandEnum.Celsus\n        }\n        this.setState({ [type]: event.target.value, [nextTemperateureType]: nextTemperature })\n    }\n\n    render() {\n        return <div className=\"mt-5\">\n            <TemperatureInput temperature={this.state.c} temperatureType={this.temperatureShortHandEnum.Celsus} handleTemperature={this.handleTemperature} />\n            <TemperatureInput temperature={this.state.f} temperatureType={this.temperatureShortHandEnum.Fahrenheit} handleTemperature={this.handleTemperature} />\n            <div className=\"mt-4\">\n                <WaterBoilingPoint celsus={this.state.c} />\n            </div>\n        </div>\n    }\n}\n\nfunction WaterBoilingPoint(props) {\n    if (props.celsus >= 100) {\n        return <b>Water Boils at {props.celsus} degree Celsus</b>\n    } else {\n        return <b>Water won't boil at {props.celsus} degree Celsus</b>\n    }\n}\n\n\nexport default CalculateTemperature","import React, { Component }  from 'react';\nimport './App.css';\nimport Calculator from './Components/Calculator/Calculator';\nimport CalculateTemperature from './Components/Temperature/CalculateTemperature';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      currentSelection: 'calculator'\n    }\n  }\n\n  getCurrentSelectedComponent = () => {\n    return this.state.currentSelection === 'calculator' ? <Calculator /> : <CalculateTemperature />\n  }\n\n  handleCurrentSelection = (event) => {\n    this.setState({ currentSelection: event.target.value });\n  }\n\n  render() {\n    return <div className=\"App p-3\">\n      <div className='container my-3 w-50'>\n        <select className=\"form-select form-select-lg bg-opacity-10\" value={this.state.currentSelection} onChange={this.handleCurrentSelection}>\n          <option value=\"calculator\">Calculator</option>\n          <option value=\"temperature\">Temperature Converter</option>\n        </select>\n      </div>\n      <div className='container w-50'>\n        {this.getCurrentSelectedComponent()}\n      </div>\n    </div>\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}